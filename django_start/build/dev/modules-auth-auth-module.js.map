{"version":3,"sources":["webpack:///./src/app/components/md-auth/change-password/change-password.component.html","webpack:///./src/app/components/md-auth/change-password/change-password.component.scss","webpack:///./src/app/components/md-auth/change-password/change-password.component.ts","webpack:///./src/app/components/md-auth/index.ts","webpack:///./src/app/components/md-auth/login/login.component.html","webpack:///./src/app/components/md-auth/login/login.component.scss","webpack:///./src/app/components/md-auth/login/login.component.ts","webpack:///./src/app/components/md-auth/profile/profile.component.html","webpack:///./src/app/components/md-auth/profile/profile.component.scss","webpack:///./src/app/components/md-auth/profile/profile.component.ts","webpack:///./src/app/components/md-auth/register/register.component.html","webpack:///./src/app/components/md-auth/register/register.component.scss","webpack:///./src/app/components/md-auth/register/register.component.ts","webpack:///./src/app/modules/auth/auth.module.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["module.exports = \"<div class=\\\"d-flex flex-row align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-12 col-lg-6\\\">\\n                <div class=\\\"form-wrap col-12\\\">\\n                    <dx-validation-group>\\n                        <div class=\\\"row d-flex align-items-center mt-3\\\">\\n                            <div class=\\\"col-md-12 mt-3\\\">\\n                                <div class=\\\"field\\\">\\n                                    <div class=\\\"label\\\">Old password</div>\\n                                    <dx-text-box [(value)]=\\\"changePassword.old_password\\\"\\n                                                 mode=\\\"password\\\" valueChangeEvent=\\\"keyup\\\"\\n                                                 placeholder=\\\"Enter old password\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\" message=\\\"Old password is required\\\">\\n                                            </dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 mt-3\\\">\\n                                <div class=\\\"field\\\">\\n                                    <div class=\\\"label\\\">New password</div>\\n                                    <dx-text-box mode=\\\"password\\\" placeholder=\\\"Enter new password\\\"\\n                                                 valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"changePassword.new_password1\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\" message=\\\"New password is required\\\">\\n                                            </dxi-validation-rule>\\n                                            <dxi-validation-rule\\n                                                    type=\\\"stringLength\\\"\\n                                                    [min]=\\\"8\\\"\\n                                                    message=\\\"Password must be at least 8 characters.\\\">\\n                                            </dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 mt-3\\\">\\n                                <div class=\\\"field\\\">\\n                                    <div class=\\\"label\\\">Confirm new password</div>\\n                                    <dx-text-box mode=\\\"password\\\" placeholder=\\\"Confirm new password\\\"\\n                                                 valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"changePassword.new_password2\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\"\\n                                                                 message=\\\"Confirm new password is required\\\">\\n                                            </dxi-validation-rule>\\n                                            <dxi-validation-rule type=\\\"compare\\\" [comparisonTarget]=\\\"passwordComparison\\\"\\n                                                                 message=\\\"New password and Confirm password do not match\\\">\\n                                            </dxi-validation-rule>\\n                                            <dxi-validation-rule\\n                                                    type=\\\"stringLength\\\"\\n                                                    [min]=\\\"8\\\"\\n                                                    message=\\\"Password must be at least 8 characters.\\\">\\n                                            </dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row text-left mt-3\\\">\\n                            <div class=\\\"col\\\">\\n                                <dx-button text=\\\"Save\\\" type=\\\"danger\\\" (onClick)=\\\"onSaveClick($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[(disabled)]=\\\"!isFormDirty || isSubmitting\\\"></dx-button>\\n                                <dx-button class=\\\"ml-3\\\" text=\\\"Cancel\\\" (onClick)=\\\"onCancelClick()\\\"></dx-button>\\n                            </div>\\n                        </div>\\n                    </dx-validation-group>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\n\nimport {Utils} from '../../../utils/utilities';\nimport {ChangePasswordModel} from '../../../models';\nimport {ApiService, UserService} from '../../../services';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePassword: ChangePasswordModel = new ChangePasswordModel();\n  isSubmitting: boolean = false;\n\n  constructor(private userService: UserService,\n              private apiService: ApiService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onCancelClick() {\n    this.userService.redirectToPanel();\n  }\n\n  passwordComparison = () => this.changePassword.new_password1;\n\n  onSaveClick(e) {\n    debugger\n    if (!e.validationGroup.validate().isValid) {\n      return false;\n    }\n    this.isSubmitting = true;\n    this.apiService.post(`${this.apiService.apiUrl}/auth/password/change`, this.changePassword).subscribe((data) => {\n      this.changePassword = new ChangePasswordModel();\n      e.validationGroup.reset();\n      if (data.token) {\n        Utils.notifySuccess('Your password has been changed successfully.');\n        this.userService.setAccessToken(data.token);\n        this.userService.redirectToPanel();\n      } else {\n        this.isSubmitting = false;\n        Utils.notifyError('An error has occurred. Please try again.');\n      }\n    }, (error) => {\n      this.isSubmitting = false;\n      if (error.message) {\n        Utils.notifyError(error.message);\n      } else {\n        Utils.notifyError('An error has occurred. Please try again.');\n      }\n    }, () => {\n      this.isSubmitting = false;\n    });\n  }\n\n  // TODO: refactor\n  get isFormDirty() {\n    return Object.values(this.changePassword).some(p => p != null);\n  }\n}\n","export * from './login/login.component';\nexport * from './profile/profile.component';\nexport * from './register/register.component';\nexport * from './change-password/change-password.component';\n","module.exports = \"<div class=\\\"login-wrap d-flex flex-row align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-12 col-lg-10\\\">\\n                <div class=\\\"login-form\\\">\\n                    <div class=\\\"logo-wrap mb-5\\\">\\n                        <a [routerLink]=\\\"['/']\\\">\\n                            <img src=\\\"/static/app/assets/images/logo.png\\\" alt=\\\"\\\">\\n                        </a>\\n                    </div>\\n                    <div class=\\\"form-wrap\\\">\\n                        <dx-validation-group>\\n                            <div class=\\\"field\\\">\\n                                <div class=\\\"label\\\">Username</div>\\n                                <dx-text-box [(value)]=\\\"user.username\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Username is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-2\\\">\\n                                <div class=\\\"label\\\">Password</div>\\n                                <dx-text-box [(value)]=\\\"user.password\\\" mode=\\\"password\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Password is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"row d-flex align-items-center mt-3\\\">\\n                                <div class=\\\"col-md-12 col-lg-8\\\"><a [routerLink]=\\\"['/forgot-password/']\\\">Forgot your\\n                                    password?</a></div>\\n                                <div class=\\\"col text-lg-left mt-2\\\">\\n                                    <dx-button width=\\\"150\\\" text=\\\"Manage\\\" icon=\\\"fields\\\" type=\\\"danger\\\"></dx-button>\\n                                </div>\\n                                <div class=\\\"col text-lg-right mt-2\\\">\\n                                    <dx-button width=\\\"150\\\" icon=\\\"cart\\\" text=\\\"Sell goods\\\" type=\\\"danger\\\"\\n                                               [(disabled)]=\\\"isSubmitting\\\"\\n                                               (onClick)=\\\"onLogin($event)\\\"></dx-button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row mt-5\\\">\\n                                <div class=\\\"col\\\">\\n                                    <h6>Don't have an account?\\n                                        <a [routerLink]=\\\"['/register/']\\\">Register now!</a>\\n                                    </h6>\\n                                </div>\\n                            </div>\\n                        </dx-validation-group>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".login-wrap {\\n  min-height: 100vh;\\n  height: 100%;\\n  width: 100%;\\n  background: #4a4a4a; }\\n  .login-wrap .login-form {\\n    background-color: #fff;\\n    box-shadow: 0 1px 8px 0 #000;\\n    padding: 100px 50px; }\\n  .login-wrap .login-form .logo-wrap {\\n      text-align: center; }\\n  .login-wrap .login-form .form-wrap {\\n      max-width: 350px;\\n      margin: 10px auto; }\\n  .login-wrap .login-form a,\\n    .login-wrap .login-form p {\\n      font-size: 15px;\\n      color: #73818f; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {cloneDeep} from 'lodash';\n\nimport {Utils} from '../../../utils/utilities';\nimport {AuthenticationService, UserService} from '../../../services';\nimport {AccountLoginInput, LoginTokenModel} from '../../../models';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  user: AccountLoginInput = new AccountLoginInput();\n  isSubmitting: boolean = false;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private userService: UserService, private authService: AuthenticationService) {\n  }\n\n  ngOnInit() {\n    if (this.userService.isLoggedIn()) {\n      this.userService.redirectToPanel();\n    }\n  }\n\n  onLogin(e) {\n    if (!e.validationGroup.validate().isValid) {\n      return false;\n    }\n    this.isSubmitting = true;\n    const edited_user = cloneDeep(this.user);\n    edited_user.username = edited_user.username.toLowerCase();\n    this.authService.login(edited_user).subscribe(\n      (data: LoginTokenModel) => {\n        if (data.token) {\n          this.userService.setAccessToken(data.token);\n          this.userService.redirectToPanel();\n        } else {\n          this.isSubmitting = false;\n          Utils.notifyError('Unable to log in with provided credentials.');\n        }\n      }, (error) => {\n        this.isSubmitting = false;\n        if (error.message) {\n          Utils.notifyError(error.message);\n        } else {\n          Utils.notifyError('Unable to login with provided credentials.');\n        }\n      }, () => {\n        this.isSubmitting = false;\n      });\n  }\n}\n","module.exports = \"<div class=\\\"d-flex flex-row align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-12 col-lg-10\\\">\\n                <div class=\\\"mb-5\\\">\\n                    <div class=\\\"logo-wrap mb-5 text-center profile_title\\\">\\n                       Update your information\\n                    </div>\\n                    <div class=\\\"form-wrap\\\">\\n                        <dx-validation-group>\\n                            <div class=\\\"row d-flex align-items-center mt-3\\\">\\n                                <div class=\\\"col text-lg-left mt-2\\\">\\n                                    <div class=\\\"label text-left\\\">First name</div>\\n                                    <dx-text-box [(value)]=\\\"editing_profile.first_name\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\"\\n                                                                 message=\\\"First name is required\\\"></dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                                <div class=\\\"col text-lg-right mt-2\\\">\\n                                    <div class=\\\"label text-left\\\">Last name</div>\\n                                    <dx-text-box [(value)]=\\\"editing_profile.last_name\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\"\\n                                                                 message=\\\"Last name is required\\\"></dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">User name</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"editing_profile.username\\\" >\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Phone</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"editing_profile.phone\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Phone is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Email</div>\\n                                <dx-text-box [(value)]=\\\"editing_profile.email\\\" valueChangeEvent=\\\"keyup\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\" message=\\\"Email is required\\\">\\n                                        </dxi-validation-rule>\\n                                        <dxi-validation-rule type=\\\"email\\\" message=\\\"Invalid email\\\">\\n                                        </dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Address</div>\\n                                <dx-text-box [(value)]=\\\"editing_profile.address\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Address is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"row text-left mt-2\\\">\\n                                <div class=\\\"field col-12 change-password-link\\\" routerLinkActive=\\\"active\\\"\\n                                     [routerLink]=\\\"['/change-password']\\\">\\n                                    <small class=\\\"text-danger\\\">Change your password</small>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row d-flex align-items-center mt-3\\\">\\n                                <div class=\\\"col text-lg-left mt-2\\\">\\n                                    <dx-button width=\\\"150\\\" text=\\\"Save\\\" type=\\\"danger\\\"\\n                                               [(disabled)]=\\\"!isFormDirty || isSubmitting\\\"\\n                                               (onClick)=\\\"onSaveClick($event)\\\" class=\\\"mr-3\\\"></dx-button>\\n                                    <dx-button text=\\\"Cancel\\\" (onClick)=\\\"onCancelClick()\\\"></dx-button>\\n                                </div>\\n                            </div>\\n                        </dx-validation-group>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".profile_title {\\n  font-size: 25px; }\\n\\n.change-password-link {\\n  cursor: pointer;\\n  color: #c22642; }\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {cloneDeep, isEqual} from 'lodash';\n\nimport {Utils} from '../../../utils/utilities';\nimport {ApiService, UserService} from '../../../services';\nimport {LoggedUser, LoginTokenModel} from '../../../models';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  profileSubscription: Subscription;\n  profile = new LoggedUser();\n  editing_profile = new LoggedUser();\n  isSubmitting: boolean = false;\n\n  constructor(private userService: UserService,\n              private apiService: ApiService) {\n  }\n\n  ngOnInit() {\n    this.profileSubscription = this.userService.currentUser.subscribe((user) => {\n      this.profile = user;\n    });\n    this.apiService.get(`${this.apiService.apiUrl}/auth/profile`).subscribe((data) => {\n      this.profile = data;\n      this.editing_profile = cloneDeep(data);\n    }, (error) => {\n      console.error(error);\n    });\n  }\n\n  get isFormDirty() {\n    return !isEqual(this.editing_profile, this.profile);\n  }\n\n  onCancelClick() {\n    this.userService.redirectToPanel();\n  }\n\n  onSaveClick(e) {\n    if (!e.validationGroup.validate().isValid) {\n      return false;\n    }\n    this.isSubmitting = true;\n    this.apiService.post(`${this.apiService.apiUrl}/auth/profile`, this.editing_profile).subscribe((data: LoginTokenModel) => {\n      this.userService.setAccessToken(data.token);\n      Utils.notifySuccess('Profile has been updated successfully.');\n      this.profile = cloneDeep(this.editing_profile);\n      this.isSubmitting = false;\n    }, (error) => {\n      this.isSubmitting = false;\n      Utils.notifyError('An error has occurred.');\n    });\n  }\n\n  ngOnDestroy() {\n    this.profileSubscription.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"login-wrap d-flex flex-row align-items-center\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-12 col-lg-10\\\">\\n                <div class=\\\"mb-5\\\">\\n                    <div class=\\\"logo-wrap mb-5 text-center register_head\\\">\\n                        Create your account\\n                    </div>\\n                    <div class=\\\"form-wrap\\\">\\n                        <dx-validation-group>\\n                            <div class=\\\"row d-flex align-items-center mt-3\\\">\\n                                <div class=\\\"col text-lg-left mt-2\\\">\\n                                    <div class=\\\"label text-left\\\">First name</div>\\n                                    <dx-text-box [(value)]=\\\"register.first_name\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\"\\n                                                                 message=\\\"Username is required\\\"></dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                                <div class=\\\"col text-lg-right mt-2\\\">\\n                                    <div class=\\\"label text-left\\\">Last name</div>\\n                                    <dx-text-box [(value)]=\\\"register.last_name\\\">\\n                                        <dx-validator>\\n                                            <dxi-validation-rule type=\\\"required\\\"\\n                                                                 message=\\\"Username is required\\\"></dxi-validation-rule>\\n                                        </dx-validator>\\n                                    </dx-text-box>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Phone</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"register.phone\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Password is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field  mt-3\\\">\\n                                <div class=\\\"label\\\">Shop name</div>\\n                                <dx-text-box [(value)]=\\\"register.shop_name\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Username is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Address</div>\\n                                <dx-text-box [(value)]=\\\"register.address\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Password is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Email</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"register.email\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\" message=\\\"Email is required.\\\">\\n                                        </dxi-validation-rule>\\n                                        <dxi-validation-rule type=\\\"email\\\" message=\\\"Invalid email\\\">\\n                                        </dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">User name</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"register.username\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Password is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Password</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"register.password\\\" mode=\\\"password\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Username is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"field mt-3\\\">\\n                                <div class=\\\"label\\\">Confirm password</div>\\n                                <dx-text-box valueChangeEvent=\\\"keyup\\\" [(value)]=\\\"register.confirm_password\\\" mode=\\\"password\\\">\\n                                    <dx-validator>\\n                                        <dxi-validation-rule type=\\\"required\\\"\\n                                                             message=\\\"Password is required\\\"></dxi-validation-rule>\\n                                    </dx-validator>\\n                                </dx-text-box>\\n                            </div>\\n                            <div class=\\\"row d-flex align-items-center mt-3\\\">\\n                                <div class=\\\"col text-lg-left mt-2\\\">\\n                                    <dx-button width=\\\"150\\\" text=\\\"Sign up\\\" type=\\\"danger\\\"\\n                                               [(disabled)]=\\\"isSubmitting\\\"\\n                                               (onClick)=\\\"onSaveClick($event)\\\"></dx-button>\\n                                </div>\\n                            </div>\\n                        </dx-validation-group>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".register_head {\\n  background: 0 0;\\n  color: #111;\\n  font-size: 31px;\\n  text-transform: uppercase;\\n  line-height: 34px;\\n  margin-top: 35px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {Utils} from '../../../utils/utilities';\nimport {ApiService, UserService} from '../../../services';\nimport {RegisterInput} from '../../../models';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  register: RegisterInput = new RegisterInput();\n  isSubmitting: boolean = false;\n\n  constructor(private router: Router,\n              private apiService: ApiService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onSaveClick(e) {\n    if (!e.validationGroup.validate().isValid) {\n      return false;\n    }\n    this.isSubmitting = true;\n    this.apiService.post(`${this.apiService.apiUrl}/auth/register`, this.register).subscribe(\n      (data) => {\n        // this.userService.setAccessToken(data.token);\n        Utils.notifySuccess('Caregory product has been added successfully.');\n        this.router.navigate(['/login']);\n        this.isSubmitting = false;\n      }, (error) => {\n        this.isSubmitting = false;\n        if (error.message) {\n          Utils.notifyError(error.message);\n        } else {\n          Utils.notifyError('An error has occurred. Please try again.');\n        }\n      }, () => {\n        this.isSubmitting = false;\n      });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\n\nimport {SharedModule} from '../shared.module';\nimport {AuthGuard, GuestGuard} from '../../services/gaurds';\nimport {LayoutComponent} from '../../components';\nimport {\n  LoginComponent,\n  ProfileComponent,\n  RegisterComponent,\n  ChangePasswordComponent,\n} from '../../components/md-auth';\n\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: LayoutComponent,\n        canActivate: [AuthGuard],\n        children: [\n          {\n            path: 'profile',\n            component: ProfileComponent,\n            data: {title: 'Profile'}\n          },\n          {\n            path: 'change-password',\n            component: ChangePasswordComponent,\n            data: {title: 'Change Password'}\n          }\n        ]\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n        canActivate: [GuestGuard],\n        data: {title: 'Login'}\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n        canActivate: [GuestGuard],\n        data: {title: 'Register'}\n      },\n    ])\n  ],\n  declarations: [\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    ChangePasswordComponent,\n  ]\n})\nexport class AuthModule {\n}\n"],"sourceRoot":""}